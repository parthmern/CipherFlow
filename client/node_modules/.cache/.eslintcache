[{"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\index.js":"1","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\App.jsx":"2","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\context\\AppContext.js":"3","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\ProjectPage.jsx":"4","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\RegisterPage.jsx":"5","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\HomePage.jsx":"6","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\WorkspacePage.jsx":"7","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\LoginPage.jsx":"8","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\Navbar.jsx":"9","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\CodePage.jsx":"10","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\Canvas.js":"11","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\ProjectSection.js":"12","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\Sidebar.js":"13","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\fireBaseSetup\\firebase.js":"14","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\utils\\apiUtils.js":"15","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\Editor.js":"16","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\CodeSelector.js":"17"},{"size":509,"mtime":1709388736652,"results":"18","hashOfConfig":"19"},{"size":2192,"mtime":1710612154751,"results":"20","hashOfConfig":"19"},{"size":930,"mtime":1709398441733,"results":"21","hashOfConfig":"19"},{"size":686,"mtime":1710001875986,"results":"22","hashOfConfig":"19"},{"size":2759,"mtime":1710625683183,"results":"23","hashOfConfig":"19"},{"size":2732,"mtime":1710001374132,"results":"24","hashOfConfig":"19"},{"size":5488,"mtime":1710626400508,"results":"25","hashOfConfig":"19"},{"size":3139,"mtime":1710625578772,"results":"26","hashOfConfig":"19"},{"size":2435,"mtime":1710627321368,"results":"27","hashOfConfig":"19"},{"size":2032,"mtime":1710563306836,"results":"28","hashOfConfig":"19"},{"size":3706,"mtime":1710012482776,"results":"29","hashOfConfig":"19"},{"size":3717,"mtime":1710612470930,"results":"30","hashOfConfig":"19"},{"size":2514,"mtime":1710627736112,"results":"31","hashOfConfig":"19"},{"size":536,"mtime":1709325918534,"results":"32","hashOfConfig":"19"},{"size":130,"mtime":1710628636191,"results":"33","hashOfConfig":"19"},{"size":2837,"mtime":1709942050892,"results":"34","hashOfConfig":"19"},{"size":733,"mtime":1710558325802,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"4bde7o",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"40"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\index.js",["96","97"],[],"import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { AppContext, AppContextProvider } from \"./context/AppContext\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <AppContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n      <Toaster />\r\n    </BrowserRouter>\r\n  </AppContextProvider>\r\n\r\n);\r\n",[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\App.jsx",["98","99"],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\context\\AppContext.js",[],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\ProjectPage.jsx",[],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\RegisterPage.jsx",["100"],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\HomePage.jsx",["101","102","103"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport codeImg from \"../assest/images/Screenshot 2024-03-07 220435.png\";\r\nimport codeImg2 from \"../assest/images/Screenshot 2024-03-07 222926.png\";\r\nimport codeImg3 from \"../assest/images/Creating-different-types-of-flowcharts-with-drawio-1.png\";\r\nexport const HomePage = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className='text-black relative'>\r\n      <div className='w-full  h-screen bg-black flex flex-col items-center justify-center relative overflow-hidden'>\r\n          <div className='flex flex-col z-[50] items-center justify-center'>\r\n              <div className='font-[Akira] flex items-center justify-center text-[18px] md:text-[50px] text-white border-black subTextO'>\r\n                Pseudocodes & Diagrams\r\n              </div>\r\n              <div className='font-[Akira] text-[15px] md:text-[40px] subText'>\r\n                for engineering friends\r\n              </div>\r\n              <div className='text-[#74F0ED] text-[10px] md:text-[20px] font-[Akira]'>\r\n                integrated with Open AI âœ¨\r\n              </div>\r\n          </div>\r\n          <div onClick={()=>{navigate(\"/signup\")}} className='mt-10 z-[50] select-none cursor-pointer'>\r\n              <div className='bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded' >\r\n                <span  className='font-semibold'>Get Started</span> - it's free\r\n              </div>\r\n          </div>\r\n\r\n          <img\r\n          src={\r\n            \"https://media.beehiiv.com/cdn-cgi/image/fit=scale-down,onerror=redirect,format=auto,width=1920,quality=75/www/homepage/MobileHero.png\"\r\n          }\r\n          alt=\"\"\r\n          width={800}\r\n          height={500}\r\n          className=\"w-[50%] absolute opacity-80  spin-slow z-[5] object-cover spin-slow\"\r\n          />\r\n\r\n          <div className='absolute -rotate-6 z-[4]'>\r\n              <img \r\n                  className=' relative border border-slate-300 left-[-280px] w-[50%]  top-[130px]'\r\n                  src={codeImg}\r\n              />\r\n\r\n              \r\n          </div>\r\n\r\n          <div className='absolute rotate-6 z-[4]'>\r\n            <img \r\n                    className=' relative border border-slate-300 right-[-650px] w-[60%]  top-[10px]'\r\n                    src={codeImg2}\r\n                />\r\n          </div>\r\n\r\n          <div className='absolute -rotate-6 z-[4]'>\r\n            <img \r\n                    className=' relative border border-slate-300 right-[0px] w-[30%]  top-[-250px]'\r\n                    src={codeImg3}\r\n                />\r\n          </div>\r\n          \r\n          \r\n          \r\n\r\n          \r\n\r\n\r\n          \r\n      </div>\r\n\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\WorkspacePage.jsx",["104","105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Editor } from '../components/Editor';\r\nimport axios from 'axios';\r\nimport { apiUrl } from '../utils/apiUtils';\r\nimport toast from 'react-hot-toast';\r\nimport { Canvas } from '../components/Canvas';\r\nimport chagptLogo from \"../assest/images/ChatGPT-Icon-PNG.png\";\r\n\r\nexport const WorkspacePage = () => {\r\n\r\n    const {id} = useParams();\r\n    console.log(\"id\", id);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [triggerSave, setTriggerSave] = useState(0);\r\n  \r\n    const [documentData, setDocumentData] = useState(null);\r\n    const [initialDocData, setInitialDocData] = useState(null);\r\n\r\n    const [flag, setFlag] = useState(\"document\");\r\n\r\n\r\n    const [whiteBoard, setWhiteBoard] = useState(null);\r\n    const [initWhiteBoard, setInitWhiteBoard] = useState(null);\r\n\r\n    // const myRef = useRef(null);\r\n\r\n    async function saving(){\r\n\r\n      console.log(\"documentData=>\", documentData);\r\n\r\n      const document = JSON.stringify(documentData);\r\n      console.log(\"docuemtn\", document);\r\n\r\n      const toastId = toast.loading(\"Saving ...\")\r\n      try{\r\n        console.log(\"trying\");\r\n        const res = await axios.post(`${apiUrl}/project/updateDocument` ,{id, document, whiteBoard});\r\n        console.log(\"res=>\", res);\r\n        toast.success(\"saved !!\");\r\n      }catch(error){\r\n        console.log(\"error in proj update\");\r\n        toast.error(\"not saved !!\");\r\n      }\r\n      toast.dismiss(toastId);\r\n\r\n    }\r\n\r\n    async function getProjectDetails(){\r\n\r\n      try{\r\n\r\n        const res = await axios.post(`${apiUrl}/project/getProjectDetails`, {id});\r\n        console.log(\"res of proj details=>\", res?.data?.data);\r\n\r\n        const doc = JSON.parse(res?.data?.data?.document);\r\n        setInitialDocData(doc);\r\n\r\n        if(res?.data?.data?.whiteBoard){\r\n          setInitWhiteBoard(res?.data?.data?.whiteBoard)\r\n        }\r\n\r\n      }\r\n      catch(error){\r\n        console.log(\"erorr in get proj detils\");\r\n      }\r\n    }\r\n\r\n    //console.log(\"==>myRef.current\", myRef.current);\r\n\r\n    useEffect(()=>{\r\n      getProjectDetails();\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      \r\n      saving(); \r\n      if(!(triggerSave == 0)){\r\n        \r\n      }\r\n        \r\n      \r\n    }, [triggerSave, whiteBoard]);\r\n\r\n    console.log(\"triggersave\", triggerSave);\r\n\r\n\r\n    useEffect(() => {\r\n      const handleKeyDown = (event) => {\r\n          if (event.ctrlKey && event.key === 's') {\r\n              event.preventDefault(); // Prevent the default browser action (saving the page)\r\n              saveFunction(); // Call your custom function here\r\n          }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      \r\n\r\n      return () => {\r\n          document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\r\n\r\n  const saveFunction = () => {\r\n      // Write your save function logic here\r\n      console.log('Ctrl + S pressed! Your save function executed.');\r\n      // For demonstration purposes, it logs a message to the console\r\n      setTriggerSave((prev)=> !prev);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='flex h-full relative '>\r\n\r\n        <div className={`pl-14 h-screen ${flag == \"canvas\" && \"hidden\"} ${flag == \"document\" && \"w-[100%]\"} ${flag == \"both\" && \"w-[30%]\"}`} >\r\n            <Editor initialDocData={initialDocData} documentData={documentData} setDocumentData={setDocumentData}   />\r\n        </div>\r\n\r\n        <div className='h-[calc(1450px-100vh)]  bg-red-600 w-[2px]'>\r\n        </div>\r\n\r\n        <div className={`p-1 canIframe h-screen ${flag == \"document\" && \"hidden\"} ${flag == \"canvas\" && \"w-[80%]\"} ${flag == \"both\" && \"w-[70%]\"}`}>\r\n            <Canvas triggerSave={triggerSave} initWhiteBoard={initWhiteBoard} setWhiteBoard={setWhiteBoard} />\r\n        </div>\r\n\r\n        <div className='absolute cursor-pointer top-[0px] w-[50px] right-0 md:top-[-35px] md:left-[70%] px-2 py-[0.5px] rounded z-10 bg-yellow-500' onClick={()=>setTriggerSave((prev)=> prev+1)}>\r\n          Save\r\n        </div>\r\n\r\n        <div className='absolute flex  items-center justify-center cursor-pointer rounded border left-[35%] top-[-38px] md:left-[42%] z-[1000] bg-white '>\r\n          <div className={`${flag == \"document\" ? \"bg-[#e8e8e8] rounded\" : \"bg-white\"} text-black px-2 py-[0.5] border-r`} onClick={()=>{setFlag(\"document\")}}>Document</div>\r\n          <div className={`${flag == \"both\" ? \"bg-[#e8e8e8]\" : \"bg-white rounded\"} text-black px-2 py-[0.5] border-r hidden md:block`} onClick={()=>{setFlag(\"both\")}}>Both</div>\r\n          <div className={`${flag == \"canvas\" ? \"bg-[#e8e8e8]\" : \"bg-white rounded\"} text-black  py-[0.5] px-2`} onClick={()=>{setFlag(\"canvas\")}}>Canvas</div>\r\n        </div>\r\n\r\n        <div\r\n        onClick={()=>{navigate(`/code/${id}`)}}\r\n        className=' fixed flex z-[1000] cursor-pointer items-center justify-center  top-[95vh] right-0  '>\r\n          <button type=\"button\" class=\"text-white bg-[#050708] hover:bg-[#050708]/80 focus:ring-4 focus:outline-none focus:ring-[#050708]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:hover:bg-[#050708]/40 dark:focus:ring-gray-600 me-2 mb-2\">\r\n            <img className=\" h-5 me-2 -ms-1\" src={chagptLogo} />\r\n            <p className='pl-2 font-body'>Generate code</p>\r\n          </button>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n",[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\LoginPage.jsx",["118","119","120","121"],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\Navbar.jsx",["122"],[],"import React, { useContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AppContext } from '../context/AppContext';\r\nimport toast from 'react-hot-toast';\r\n\r\nexport const Navbar = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {setIsLoggedIn,setUserData,token,setToken} = useContext(AppContext);\r\n\r\n  const { isLoggedIn, userData } = useContext(AppContext);\r\n  console.log(\"isLoggedIn\", isLoggedIn);\r\n\r\n  function logoutHandler(){\r\n    try{\r\n      setIsLoggedIn(false);\r\n      setToken(null);\r\n      setUserData(null);\r\n      localStorage.removeItem(\"userData\");\r\n      localStorage.removeItem(\"token\");\r\n\r\n      toast.success(\"Logout done\");\r\n      navigate(\"/\") ;\r\n    }\r\n    catch(e){\r\n      toast.error(\"Logout not successful\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-black z-[1000] border-b text-white h-[50px] w-[100%] flex items-center justify-between px-2  md:px-5\">\r\n\r\n      <div onClick={()=>{navigate(\"/\")}} className='hidden md:flex gap-x-1 font-[Akira] cursor-pointer hover:text-[#7FFFD4]'>\r\n        <span className='text-[#AAFF00] font-green-200'>Cipher </span> <span className=''>Flow</span>\r\n      </div>\r\n\r\n      <div className='flex w-full justify-end gap-x-5'>\r\n        {\r\n          !isLoggedIn ? (\r\n            <>\r\n              <div className='bg-blue-500 cursor-pointer hover:bg-blue-700 text-white py-1 px-3 rounded' onClick={() => { navigate(\"/login\") }}>\r\n                LOGIN\r\n              </div>\r\n              <div className='bg-blue-500 cursor-pointer hover:bg-blue-700 text-white py-1 px-3 rounded' onClick={() => { navigate(\"/signup\") }}>\r\n                SIGNUP\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className='flex items-center w-full justify-between md:justify-end  gap-x-3'>\r\n              <div onClick={()=>{navigate(\"/projects\")}} className='font-[Akira] cursor-pointer hover:text-[#AAFF00] mb-[-2px] md:text-[15px] text-[12px] text-white'>\r\n                Projects |\r\n              </div>\r\n              <p className='md:text-[13px] text-[10px] my-auto ' >{userData?.name}</p>\r\n              <div className='bg-blue-500 flex item-center justify-center cursor-pointer hover:bg-blue-700 text-white text-[10px] md:text-[15px] px-2 py-1 md:py-1 md:px-3 rounded' onClick={logoutHandler}>\r\n                LOGOUT\r\n              </div>\r\n            </div>\r\n          )\r\n            }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\pages\\CodePage.jsx",["123","124","125","126","127","128","129","130","131","132","133"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { apiUrl } from '../utils/apiUtils';\r\nimport { CodeBlock, CopyBlock, a11yDark, a11yLight, codepen, monokaiSublime, nord, paraisoDark, rainbow, tomorrowNight, vs2015, xt256 } from \"react-code-blocks\";\r\nimport toast from 'react-hot-toast';\r\nimport { CodeSelector } from '../components/CodeSelector';\r\n\r\nexport const CodePage = () => {\r\n\r\n    const {id} = useParams();\r\n\r\n    const [code, setCode] = useState() ;\r\n    const [language, setLanguage] = useState(\"c programming language\");\r\n\r\n    async function getCode(){\r\n      var toastId = toast.loading(\"Trying to generate code ...\");\r\n      console.log(\"under get code\");\r\n      \r\n      try{\r\n        \r\n        const res = await axios.post(`${apiUrl}/project/getCode`, {id, lang: language});\r\n        console.log(\"res\",res);\r\n        let ans = res?.data?.response;\r\n\r\n        if (ans.startsWith(\"```\") && ans.endsWith(\"```\")) {\r\n          ans = ans.slice(3, -3); // Remove ``` from beginning and end\r\n      }\r\n\r\n        setCode(ans);\r\n        toast.success(\"got the code\");\r\n      }\r\n      catch(error){\r\n        console.log(\"error=>\", error);\r\n        toast.error(\"Gpt error refresh page again\");\r\n      }\r\n      toast.dismiss(toastId);\r\n    }\r\n\r\n   useEffect(()=>{\r\n      var toastId2 = toast.loading(\"Trying to generate code ...\");\r\n      getCode();\r\n      toast.dismiss(toastId2)\r\n   }, [language]);\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className='bg-black h-full flex flex-col items-center pt-10'>\r\n\r\n    <CodeSelector setLanguage={setLanguage} language={language} />\r\n\r\n      <div className='w-[80%] mx-auto my-10 '>\r\n        {\r\n          (code&&language) ?\r\n          (<CodeBlock  text={code} language={language} theme={a11yLight} />) : (\r\n            <div className=' flex h-[80vh] items-center justify-center'>\r\n              <span className=\"loader mx-auto \"></span>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\Canvas.js",["134"],[],"import { DrawIoEmbed, DrawIoEmbedRef } from 'react-drawio';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nexport function Canvas({initWhiteBoard, setWhiteBoard, triggerSave}) {\r\n  const [exportedData, setExportedData] = useState(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Function to handle export button click\r\n  const handleExport = () => {\r\n    // Check if the ref to the Canvas component exists\r\n    if (canvasRef.current) {\r\n      // Send export action with desired format (e.g., xmlsvg)\r\n      canvasRef.current.exportDiagram({ format: 'xmlsvg' });\r\n    }\r\n    \r\n  };\r\n\r\n  console.log(\"exported data -=>\", exportedData);\r\n  //console.log(\"exported data -=>\", exportedData);\r\n\r\n  useEffect(()=>{\r\n    if(triggerSave !== 0){\r\n      handleExport();\r\n    }\r\n  }, [triggerSave]);\r\n\r\n\r\n  // const [iframeContent, setIframeContent] = useState('');\r\n   \r\n\r\n  //   const handleIframeLoad = () => {\r\n  //       console.log(\"onLoad detect\");\r\n  //       const iframeDocument = canvasRef.current.contentDocument || canvasRef.current.contentWindow.document;\r\n  //       const iframeContent = iframeDocument.body.innerHTML;\r\n  //       setIframeContent(iframeContent);\r\n  //   };\r\n\r\n  //   useEffect(()=>{\r\n\r\n  //     handleExport();\r\n\r\n  //   }, [iframeContent])\r\n\r\n  //   useEffect(() => {\r\n  //     const interval = setInterval(() => {\r\n          \r\n  //       handleExport();\r\n  //     }, 10000); // 30 seconds\r\n\r\n      \r\n  //     return () => clearInterval(interval);\r\n  // }, []);\r\n\r\n  \r\n \r\n\r\n  console.log(\"#############################333\", initWhiteBoard);\r\n  \r\n\r\n  return (\r\n    <div className='h-full z-[1000] '>\r\n      {/* Export button */}\r\n      {/* <button onClick={handleExport}>Export Diagram</button> */}\r\n\r\n      {/* Canvas component */}\r\n    \r\n         \r\n      <DrawIoEmbed \r\n      \r\n        xml = {\r\n          `${initWhiteBoard ? initWhiteBoard : \"\"}`\r\n        }\r\n        ref={canvasRef}\r\n        \r\n        // Event handler to receive exported data\r\n        onExport={async (data) => {\r\n          \r\n          setExportedData(data.data);\r\n          \r\n          function convertBase64ToXML(base64Data) {\r\n            const xmlData = atob(base64Data.split(',')[1]);\r\n            return xmlData;\r\n          }\r\n        \r\n        // The base64-encoded SVG data\r\n        const base64Data = data.data ;\r\n        \r\n        // Convert base64 data to XML\r\n        const xmlData = convertBase64ToXML(base64Data);\r\n        \r\n        // Parse the XML data\r\n        const parser = new DOMParser();\r\n        const xmlDoc = await parser.parseFromString(xmlData, \"text/xml\");\r\n        \r\n        // Now you can work with xmlDoc, which contains the parsed XML data\r\n        console.log(\"xml=>\",xmlDoc);\r\n        //console.log(JSON.stringify(xmlDoc.location)); \r\n        const x = xmlDoc.querySelectorAll(\"svg\");\r\n\r\n        \r\n        console.log(\"x=>\",x[0].outerHTML);\r\n\r\n        setWhiteBoard(x[0].outerHTML);\r\n\r\n        //setExportedData(x[0].outerHTML);\r\n\r\n        // console.log(\"converting to string\");\r\n        // // Assuming xmlData is the XML document object\r\n        // const xmlSerializer = new XMLSerializer();\r\n        // const xmlString = await xmlSerializer.serializeToString(xmlData);\r\n\r\n        \r\n\r\n        // console.log(\"xmlstring==>\",xmlString);\r\n        \r\n        \r\n      }} \r\n\r\n\r\n      />\r\n        \r\n      \r\n      {/* Display exported data */}\r\n      {exportedData && (\r\n        <div>\r\n          <h3>Exported Diagram</h3>\r\n          {/* Display exported data (e.g., as an image or SVG) */}\r\n          {/* For example, you can use an <img> tag for SVG data */}\r\n          <img src={`${exportedData}`} alt=\"Exported Diagram\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\ProjectSection.js",["135","136"],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\Sidebar.js",[],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\fireBaseSetup\\firebase.js",[],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\utils\\apiUtils.js",[],[],"D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\Editor.js",["137","138","139","140"],[],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Header from '@editorjs/header';\r\nimport EditorJS from '@editorjs/editorjs';\r\n// import List from \"@editorjs/list\";\r\nimport NestedList from '@editorjs/nested-list';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n\r\nexport const Editor = ({documentData,initialDocData, setDocumentData}) => {\r\n\r\n  const ejInstance = useRef();\r\n\r\n    const rawDocument = {\r\n        \"time\" : 1550476186479,\r\n        \"blocks\" : [\r\n            {\r\n                data : {\r\n                    text : \"Project Name\", \r\n                    level : 2 ,\r\n                },\r\n                id : \"123\",\r\n                type : 'header'\r\n            },\r\n            {\r\n                data : {\r\n                    level : 5 ,\r\n                },\r\n                id : \"123\",\r\n                type : 'header'\r\n            },\r\n\r\n        ],\r\n        \"version\" : \"2.8.1\"\r\n    }\r\n\r\n    const [document, setDocument] = useState();\r\n\r\n    console.log(\"documentdata in editor\", documentData);\r\n    \r\n    const initEditor = () =>{\r\n      console.log(\"initialdone\");\r\n\r\n      if (ejInstance.current) {\r\n        ejInstance.current.destroy();\r\n      }\r\n    \r\n\r\n        var editor = new EditorJS({\r\n            /**\r\n             * Id of Element that should contain Editor instance\r\n             */\r\n\r\n            \r\n            onReady: () => {\r\n              ejInstance.current = editor;\r\n            },\r\n            onChange: async () => {\r\n              let content = await editor.saver.save();\r\n  \r\n              console.log(content);\r\n\r\n              setDocumentData(content);\r\n            },\r\n\r\n            tools: {\r\n                header: {\r\n                    class: Header,\r\n                    config: {\r\n                      placeholder: 'Enter a header',\r\n                      levels: [2, 3, 4],\r\n                      defaultLevel: 3\r\n                    }\r\n                  },\r\n\r\n                //   list: {\r\n                //     class: List,\r\n                //     inlineToolbar: true,\r\n                //     config: {\r\n                //       defaultStyle: 'ordered'\r\n                //     }\r\n                //   },\r\n\r\n                  list: {\r\n                    class: NestedList,\r\n                    inlineToolbar: true,\r\n                    config: {\r\n                      defaultStyle: 'ordered'\r\n                    },\r\n                  },\r\n                  \r\n              },\r\n\r\n            holder: 'editorjs',\r\n            theme: 'dark',\r\n            data : initialDocData ? initialDocData : rawDocument\r\n          });\r\n          \r\n    }\r\n\r\n    useEffect(() => {\r\n      initialDocData && initEditor();\r\n    }, [initialDocData]);\r\n  \r\n\r\n  return (\r\n    <div className=' '>\r\n        <div className='w-full '  id='editorjs'>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Z_PARTH-CODES\\CipherFlow\\client\\src\\components\\CodeSelector.js",[],[],{"ruleId":"141","severity":1,"message":"142","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":20},{"ruleId":"141","severity":1,"message":"145","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":24,"column":15,"nodeType":"143","messageId":"144","endLine":24,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":49,"column":6,"nodeType":"149","endLine":49,"endColumn":13,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":68,"column":7,"nodeType":"149","endLine":68,"endColumn":24,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":41,"column":15,"nodeType":"155","endLine":44,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":50,"column":13,"nodeType":"155","endLine":53,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":57,"column":13,"nodeType":"155","endLine":60,"endColumn":19},{"ruleId":"141","severity":1,"message":"156","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":34},{"ruleId":"147","severity":1,"message":"157","line":75,"column":7,"nodeType":"149","endLine":75,"endColumn":9,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":80,"column":24,"nodeType":"161","messageId":"162","endLine":80,"endColumn":26},{"ruleId":"147","severity":1,"message":"163","line":85,"column":8,"nodeType":"149","endLine":85,"endColumn":33,"suggestions":"164"},{"ruleId":"159","severity":1,"message":"160","line":117,"column":48,"nodeType":"161","messageId":"162","endLine":117,"endColumn":50},{"ruleId":"159","severity":1,"message":"160","line":117,"column":80,"nodeType":"161","messageId":"162","endLine":117,"endColumn":82},{"ruleId":"159","severity":1,"message":"160","line":117,"column":116,"nodeType":"161","messageId":"162","endLine":117,"endColumn":118},{"ruleId":"159","severity":1,"message":"160","line":124,"column":56,"nodeType":"161","messageId":"162","endLine":124,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":124,"column":90,"nodeType":"161","messageId":"162","endLine":124,"endColumn":92},{"ruleId":"159","severity":1,"message":"160","line":124,"column":123,"nodeType":"161","messageId":"162","endLine":124,"endColumn":125},{"ruleId":"159","severity":1,"message":"160","line":133,"column":35,"nodeType":"161","messageId":"162","endLine":133,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":134,"column":35,"nodeType":"161","messageId":"162","endLine":134,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":135,"column":35,"nodeType":"161","messageId":"162","endLine":135,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":142,"column":13,"nodeType":"155","endLine":142,"endColumn":65},{"ruleId":"141","severity":1,"message":"165","line":2,"column":47,"nodeType":"143","messageId":"144","endLine":2,"endColumn":54},{"ruleId":"141","severity":1,"message":"166","line":2,"column":56,"nodeType":"143","messageId":"144","endLine":2,"endColumn":74},{"ruleId":"141","severity":1,"message":"167","line":12,"column":56,"nodeType":"143","messageId":"144","endLine":12,"endColumn":61},{"ruleId":"147","severity":1,"message":"168","line":72,"column":8,"nodeType":"149","endLine":72,"endColumn":14,"suggestions":"169"},{"ruleId":"141","severity":1,"message":"167","line":10,"column":36,"nodeType":"143","messageId":"144","endLine":10,"endColumn":41},{"ruleId":"141","severity":1,"message":"170","line":5,"column":21,"nodeType":"143","messageId":"144","endLine":5,"endColumn":30},{"ruleId":"141","severity":1,"message":"171","line":5,"column":32,"nodeType":"143","messageId":"144","endLine":5,"endColumn":40},{"ruleId":"141","severity":1,"message":"172","line":5,"column":53,"nodeType":"143","messageId":"144","endLine":5,"endColumn":60},{"ruleId":"141","severity":1,"message":"173","line":5,"column":62,"nodeType":"143","messageId":"144","endLine":5,"endColumn":76},{"ruleId":"141","severity":1,"message":"174","line":5,"column":78,"nodeType":"143","messageId":"144","endLine":5,"endColumn":82},{"ruleId":"141","severity":1,"message":"175","line":5,"column":84,"nodeType":"143","messageId":"144","endLine":5,"endColumn":95},{"ruleId":"141","severity":1,"message":"176","line":5,"column":97,"nodeType":"143","messageId":"144","endLine":5,"endColumn":104},{"ruleId":"141","severity":1,"message":"177","line":5,"column":106,"nodeType":"143","messageId":"144","endLine":5,"endColumn":119},{"ruleId":"141","severity":1,"message":"178","line":5,"column":121,"nodeType":"143","messageId":"144","endLine":5,"endColumn":127},{"ruleId":"141","severity":1,"message":"179","line":5,"column":129,"nodeType":"143","messageId":"144","endLine":5,"endColumn":134},{"ruleId":"147","severity":1,"message":"180","line":44,"column":7,"nodeType":"149","endLine":44,"endColumn":17,"suggestions":"181"},{"ruleId":"141","severity":1,"message":"182","line":1,"column":23,"nodeType":"143","messageId":"144","endLine":1,"endColumn":37},{"ruleId":"141","severity":1,"message":"183","line":13,"column":12,"nodeType":"143","messageId":"144","endLine":13,"endColumn":30},{"ruleId":"141","severity":1,"message":"184","line":14,"column":12,"nodeType":"143","messageId":"144","endLine":14,"endColumn":28},{"ruleId":"141","severity":1,"message":"185","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":25},{"ruleId":"141","severity":1,"message":"186","line":36,"column":12,"nodeType":"143","messageId":"144","endLine":36,"endColumn":20},{"ruleId":"141","severity":1,"message":"187","line":36,"column":22,"nodeType":"143","messageId":"144","endLine":36,"endColumn":33},{"ruleId":"147","severity":1,"message":"188","line":102,"column":8,"nodeType":"149","endLine":102,"endColumn":24,"suggestions":"189"},"no-unused-vars","'AppContext' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate', 'setIsLoggedIn', 'setToken', and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has missing dependencies: 'isLoggedIn' and 'navigate'. Either include them or remove the dependency array.",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'getProjectDetails'. Either include it or remove the dependency array.",["192"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'saving'. Either include it or remove the dependency array.",["193"],"'signOut' is defined but never used.","'onAuthStateChanged' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate', 'setIsLoggedIn', 'setToken', 'setUserData', and 'userData'. Either include them or remove the dependency array.",["194"],"'CopyBlock' is defined but never used.","'a11yDark' is defined but never used.","'codepen' is defined but never used.","'monokaiSublime' is defined but never used.","'nord' is defined but never used.","'paraisoDark' is defined but never used.","'rainbow' is defined but never used.","'tomorrowNight' is defined but never used.","'vs2015' is defined but never used.","'xt256' is defined but never used.","React Hook useEffect has a missing dependency: 'getCode'. Either include it or remove the dependency array.",["195"],"'DrawIoEmbedRef' is defined but never used.","'isDeleteBtnClicked' is assigned a value but never used.","'deletedProjectId' is assigned a value but never used.","'useSearchParams' is defined but never used.","'document' is assigned a value but never used.","'setDocument' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initEditor'. Either include it or remove the dependency array.",["196"],{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [navigate, setIsLoggedIn, setToken, setUserData, token]",{"range":"211","text":"212"},"Update the dependencies array to be: [isLoggedIn, navigate, registerDetails]",{"range":"213","text":"214"},"Update the dependencies array to be: [getProjectDetails]",{"range":"215","text":"216"},"Update the dependencies array to be: [saving, triggerSave, whiteBoard]",{"range":"217","text":"218"},"Update the dependencies array to be: [flag, navigate, setIsLoggedIn, setToken, setUserData, userData]",{"range":"219","text":"220"},"Update the dependencies array to be: [getCode, language]",{"range":"221","text":"222"},"Update the dependencies array to be: [initEditor, initialDocData]",{"range":"223","text":"224"},[1556,1563],"[navigate, setIsLoggedIn, setToken, setUserData, token]",[2081,2098],"[isLoggedIn, navigate, registerDetails]",[2174,2176],"[getProjectDetails]",[2304,2329],"[saving, triggerSave, whiteBoard]",[2339,2345],"[flag, navigate, setIsLoggedIn, setToken, setUserData, userData]",[1473,1483],"[getCode, language]",[2688,2704],"[initEditor, initialDocData]"]